# Default server configuration
server {
    listen 80;
    server_name localhost;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # CORS headers
    add_header Access-Control-Allow-Origin "http://localhost:5173" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Nginx health check endpoint
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Auth Service routes - specific path
    location /api/auths/ {
        limit_req zone=api burst=20 nodelay;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        # Remove /api prefix and proxy to auth-service
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://auth-service;
        
        # Common proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;
        
        # Fallback response
        error_page 502 503 504 = @service_fallback;
    }

    # Medias Service routes - COMMENTED OUT (not fully implemented yet)
    # location /api/medias/ {
    #     limit_req zone=api burst=20 nodelay;
    #     
    #     # Handle preflight OPTIONS requests
    #     if ($request_method = 'OPTIONS') {
    #         add_header Access-Control-Allow-Origin "http://localhost:5173" always;
    #         add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
    #         add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    #         add_header Access-Control-Allow-Credentials "true" always;
    #         add_header Access-Control-Max-Age 86400;
    #         add_header Content-Length 0;
    #         add_header Content-Type text/plain;
    #         return 204;
    #     }
    #     
    #     # Remove /api prefix and proxy to medias-service
    #     rewrite ^/api/(.*) /$1 break;
    #     proxy_pass http://medias-service/;
    #     
    #     # Common proxy settings
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     
    #     # Timeout settings
    #     proxy_connect_timeout 30s;
    #     proxy_send_timeout 30s;
    #     proxy_read_timeout 30s;
    #     
    #     # Error handling
    #     proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    #     proxy_next_upstream_tries 2;
    #     proxy_next_upstream_timeout 10s;
    #     
    #     # Fallback response
    #     error_page 502 503 504 = @service_fallback;
    # }

    # All other API routes - proxy to main-service
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "http://localhost:5173" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        # Remove /api prefix and proxy to main-service
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://main-service;
        
        # Common proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;
        
        # Fallback response
        error_page 502 503 504 = @service_fallback;
    }

    # Default route - show available endpoints
    location / {
        return 200 '{"message": "API Gateway", "services": {"auth": "/api/auths/", "main": "/api/ (user, role, health modules)", "medias": "/api/medias/ (commented out)"}, "health_check": "/nginx-health"}';
        add_header Content-Type application/json;
    }

    # Common fallback response for all services
    location @service_fallback {
        return 503 '{"error": "Service Unavailable", "message": "Service is temporarily unavailable", "retry_after": 30}';
        add_header Content-Type application/json;
        add_header Retry-After 30;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        return 404 '{"error": "Not Found", "message": "The requested resource was not found"}';
        add_header Content-Type application/json;
    }
    
    location = /50x.html {
        return 500 '{"error": "Internal Server Error", "message": "Something went wrong"}';
        add_header Content-Type application/json;
    }
}